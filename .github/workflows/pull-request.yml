on: pull_request
name: Pull Request Workflow
jobs:
  runTests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [10, 12, 14]
    steps:
      - uses: actions/checkout@v3
      - name: npm cache
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js version ${{ matrix.node_version }}
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node_version }}
      - name: Execute tests
        run: npm cit
  CodeQL-Build:
    runs-on: ubuntu-latest
    needs: runTests
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  OSSAR-Scan:
    runs-on: windows-latest
    needs: runTests
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.201'
      - name: Run OSSAR
        uses: github/ossar-action@v1
        id: ossar
      - name: Upload OSSAR results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.ossar.outputs.sarifFile }}
